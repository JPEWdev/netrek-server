#	$Id: Makefile.in,v 1.8 2006/02/22 09:18:30 quozl Exp $	
#
#	Installers, you should not need to edit this file.
#	Everything should be setup in the configuration script.
#

PACKAGE=netrek-server-vanilla
VERSION=2.10.2

VPATH = @srcdir@
srcdir = @srcdir@

CONFIG = system.mk

include $(CONFIG)

.PHONY: rmdependencies clean reallyclean install installbin server utils startup rsa_utils do_xsg do_pledit do_robots do_gum

all: null $(PMAKE) server utils startup rsa_utils do_xsg do_pledit do_robots do_robotd @GUM@

depend: system.mk
	cd ntserv;    $(MAKE) depend
	cd robots;    $(MAKE) depend
	cd newstartd; $(MAKE) depend
	cd tools;     $(MAKE) depend
	cd pledit;    $(MAKE) depend
	cd keycomp;   $(MAKE) depend
	cd sequencer; $(MAKE) depend
	cd xsg;       $(MAKE) depend
	cd pledit;    $(MAKE) depend
	-@if [ -f res-rsa/Makefile ]; then \
		(cd res-rsa; $(MAKE) depend) \
	fi

null: 
	touch null
	$(MAKE) depend

system.mk: ${srcdir}/system.mk.in ${srcdir}/include/config.h.in ${srcdir}/configure
	if [ -f config.status ]; then \
		./config.status; \
	else \
		${srcdir}/configure -v; \
	fi

config.h: system.mk
	touch config.h

# make the server binaries and such
server: null rsalib
	cd ntserv; $(MAKE)

do_robots:
	cd robots; $(MAKE)

do_robotd: 
	cd robotd; $(MAKE)

do_gum: 
	cd gum; $(MAKE)

do_xsg:
	cd xsg; $(MAKE);

do_pledit:
	cd pledit; $(MAKE) 

rsalib:	
	-@if [ -f res-rsa/Makefile ]; then \
		(cd res-rsa; $(MAKE) librsa.a) \
	fi

utils: rsalib
	cd tools; $(MAKE) 
	cd sequencer; $(MAKE)

rsa_utils: 
	cd keycomp; $(MAKE)

startup: 
	cd newstartd; $(MAKE)

cflags.h: Makefile $(CONFIG)
	cd ntserv;  $(MAKE) cflags

lint:
	cd ntserv;  $(MAKE) lint
	cd robots;  $(MAKE) lint
	cd keycomp; $(MAKE) lint
	cd tools;   $(MAKE) lint

clean:
	cd ntserv;    $(MAKE) clean
	cd robots;    $(MAKE) clean
	cd robotd;    $(MAKE) clean
	if [ x@GUM@ = xdo_gum ]; then \
		cd gum;       $(MAKE) clean; \
	fi
	cd newstartd; $(MAKE) clean
	cd tools;     $(MAKE) clean
	cd pledit;    $(MAKE) clean
	cd sequencer; $(MAKE) clean
	cd keycomp;   $(MAKE) clean
	cd xsg;       $(MAKE) clean
	-@if [ -f res-rsa/Makefile ]; then \
		cd res-rsa; echo "	cd res-rsa; make clean"; $(MAKE) clean; \
	fi
	rm -f make.out cflags.h *~ null #*#

reallyclean:
	cd ntserv;    $(MAKE) reallyclean
	cd robots;    $(MAKE) reallyclean
	cd robotd;    $(MAKE) reallyclean
	if [ x@GUM@ = xdo_gum ]; then \
		cd gum;       $(MAKE) distclean; \
	fi
	cd newstartd; $(MAKE) reallyclean
	cd tools;     $(MAKE) reallyclean
	cd pledit;    $(MAKE) reallyclean
	cd sequencer; $(MAKE) reallyclean
	cd keycomp;   $(MAKE) reallyclean
	cd xsg;       $(MAKE) reallyclean
	-@if [ -f res-rsa/Makefile ]; then \
		cd res-rsa; echo "	cd res-rsa; make reallyclean"; \
		$(MAKE) reallyclean; \
	fi
	rm -f make.out cflags.h config.cache config.log tools/trekon *~ null #*#

distclean: clean reallyclean rmdependencies

maintainer-clean: distclean
	@echo 'This command is intended for maintainers to use; it'
	@echo 'deletes files that may need special tools to rebuild.'
	rm -f Makefile */Makefile
	rm -rf */.depend

installbin: all
	cd ntserv;    $(MAKE) install DESTDIR=$(DESTDIR)
	cd robots;    $(MAKE) install DESTDIR=$(DESTDIR)
	cd robotd;    $(MAKE) install DESTDIR=$(DESTDIR)
	if [ x@GUM@ = xdo_gum ]; then \
		cd gum;       $(MAKE) install DESTDIR=$(DESTDIR); \
	fi
	cd newstartd; $(MAKE) install DESTDIR=$(DESTDIR)
	-@if [ -f res-rsa/Makefile ]; then \
		cd res-rsa; echo "	cd res-rsa; make install"; $(MAKE) install DESTDIR=$(DESTDIR); \
	fi
	cd tools;     $(MAKE) install DESTDIR=$(DESTDIR)
	cd keycomp;   $(MAKE) install DESTDIR=$(DESTDIR)
	cd pledit;    $(MAKE) install DESTDIR=$(DESTDIR)
	cd sequencer; $(MAKE) install DESTDIR=$(DESTDIR)
	cd xsg;       $(MAKE) install DESTDIR=$(DESTDIR)

install: installbin
	mkdir -p $(DESTDIR)$(LIBDIR) $(DESTDIR)$(BINDIR) $(DESTDIR)$(SYSCONFDIR) $(DESTDIR)$(LOCALSTATEDIR)
	cd docs;   $(MAKE) install DESTDIR=$(DESTDIR)
	cd tools;  $(MAKE) installtrekon DESTDIR=$(DESTDIR)
	@echo
	@echo "Vanilla Netrek Server installation is completed."
	@echo "To start your Netrek server, type $(BINDIR)/netrekd"
	@echo "Then start a Netrek client with '-h localhost'"

rmdependencies:
	cd ntserv;    $(MAKE) rmdependencies
	cd robots;    $(MAKE) rmdependencies
	cd newstartd; $(MAKE) rmdependencies
	cd tools;     $(MAKE) rmdependencies
	cd pledit;    $(MAKE) rmdependencies
	cd keycomp;   $(MAKE) rmdependencies
	cd sequencer; $(MAKE) rmdependencies
	cd xsg;       $(MAKE) rmdependencies
	-@if [ -f res-rsa/Makefile ]; then \
		cd res-rsa; echo "      cd res-rsa; make rmdependencies"; \
		$(MAKE) rmdependencies; \
	fi

NAME=$(PACKAGE)-$(VERSION)
dist:
	mkdir $(NAME)
        # what has changed
	cp -p ChangeLog NEWS $(NAME)/
        # what needs to change
	cp -p BUGS PROJECTS $(NAME)/
        # top level documentation
	cp -p INSTALL INSTALL.INL INSTALL.Newbie INSTALL.RSA README \
	README.developers README.releasing CHANGES EXAMPLE $(NAME)/
        # configuration
	cp -p configure.in Makefile.in system.mk.in configure install-sh \
	name.c $(NAME)/
        # subdirectories
	cp -rp docs gum include keycomp motd newstartd ntserv php \
	pledit res-rsa robotd robots sequencer tools xsg $(NAME)/
	rm -rf $(NAME)/*/CVS $(NAME)/*/*/CVS
        # packaging subdirectories (debian)
	mkdir $(NAME)/debian $(NAME)/rpm
	cp -p debian/README.Debian debian/changelog debian/control \
	debian/copyright debian/init debian/postinst debian/rules \
	$(NAME)/debian
        # packaging subdirectories (rpm)
	cp -rp rpm $(NAME)/
        # build
	GZIP=--best tar cfz $(NAME).tar.gz $(NAME)
	rm -rf $(NAME)

#
# Maintainer's Debian packaging section
#
DEBIAN_VERSION=`head -1 debian/changelog|cut -f2 -d\(|cut -f1 -d\)`
DEBIAN_PACKAGE=`head -1 debian/changelog|cut -f1 -d\ `
DEBIAN_ARCHIVE=~/public_html/external/mine/netrek

package:
	fakeroot dpkg-buildpackage -us -uc

upload:
	mv ../$(DEBIAN_PACKAGE)_$(DEBIAN_VERSION)*{.dsc,.changes,.tar.gz,.deb} $(DEBIAN_ARCHIVE)

update:
	(cd $(DEBIAN_ARCHIVE);make)

release: package upload update

